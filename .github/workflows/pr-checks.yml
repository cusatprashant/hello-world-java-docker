name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    name: Validate Pull Request
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          test
          chore
          perf
          ci
        scopes: |
          api
          ui
          core
          config
          deps
          security
        requireScope: false

    - name: Check PR size
      run: |
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | wc -l)
        CHANGED_LINES=$(git diff --stat origin/${{ github.base_ref }}...${{ github.head_ref }} | tail -1 | grep -oE '[0-9]+ insertions|[0-9]+ deletions' | grep -oE '[0-9]+' | paste -sd+ | bc)
        
        echo "Files changed: $CHANGED_FILES"
        echo "Lines changed: $CHANGED_LINES"
        
        if [ $CHANGED_FILES -gt 50 ]; then
          echo "⚠️ Large PR: $CHANGED_FILES files changed. Consider breaking this into smaller PRs."
        fi
        
        if [ $CHANGED_LINES -gt 1000 ]; then
          echo "⚠️ Large PR: $CHANGED_LINES lines changed. Consider breaking this into smaller PRs."
        fi

  quick-tests:
    runs-on: ubuntu-latest
    name: Quick Tests
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run unit tests
      run: |
        mvn test \
          -Dspring.profiles.active=test \
          -Dmaven.test.failure.ignore=false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pr-test-results
        path: target/surefire-reports/

  code-quality-check:
    runs-on: ubuntu-latest
    name: Code Quality Check
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run Checkstyle
      run: mvn checkstyle:check
      continue-on-error: true

    - name: Run PMD
      run: mvn pmd:check
      continue-on-error: true

    - name: Run SpotBugs
      run: mvn spotbugs:check
      continue-on-error: true

    - name: SonarCloud PR Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ ! -z "$SONAR_TOKEN" ]; then
          mvn verify sonar:sonar \
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }} \
            -Dsonar.organization=${{ github.repository_owner }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }}
        else
          echo "SONAR_TOKEN not found, skipping SonarCloud analysis"
        fi

  security-check:
    runs-on: ubuntu-latest
    name: Security Check
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run dependency check
      run: |
        mvn org.owasp:dependency-check-maven:check \
          -DfailBuildOnCVSS=8

    - name: Run Trivy scan on code
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-check:
    runs-on: ubuntu-latest
    name: Build Check
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build application
      run: |
        mvn clean package \
          -DskipTests \
          -Dspring.profiles.active=prod

    - name: Test Docker build
      run: |
        docker build -t pr-test:${{ github.event.number }} .
        
        # Basic container test
        docker run -d --name pr-test -p 8080:8080 pr-test:${{ github.event.number }}
        
        # Wait for container to start
        sleep 30
        
        # Test endpoint
        curl -f http://localhost:8080/ || exit 1
        
        # Cleanup
        docker stop pr-test
        docker rm pr-test
        docker rmi pr-test:${{ github.event.number }}

  robot-framework-pr-test:
    runs-on: ubuntu-latest
    name: Robot Framework PR Tests
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.changed_files, 'robot/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build and start application
      run: |
        mvn clean package -DskipTests
        java -jar target/*.jar &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV

    - name: Wait for application to start
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:8080/; do sleep 2; done'

    - name: Set up Python for Robot Framework
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Robot Framework
      run: |
        pip install --upgrade pip
        pip install robotframework
        pip install robotframework-requests
        pip install robotframework-jsonlibrary

    - name: Run Robot Framework tests
      run: |
        robot --outputdir results --include smoke robot/api/
      continue-on-error: true

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

    - name: Upload Robot results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pr-robot-results
        path: results/

  performance-impact:
    runs-on: ubuntu-latest
    name: Performance Impact Assessment
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build PR version
      run: |
        mvn clean package -DskipTests
        cp target/*.jar app-pr.jar

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Build base version
      run: |
        mvn clean package -DskipTests
        cp target/*.jar app-base.jar

    - name: Install performance tools
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2-utils

    - name: Test base performance
      run: |
        java -jar app-base.jar &
        BASE_PID=$!
        sleep 30
        ab -n 1000 -c 10 http://localhost:8080/ > base-performance.txt
        kill $BASE_PID
        sleep 5

    - name: Test PR performance
      run: |
        java -jar app-pr.jar &
        PR_PID=$!
        sleep 30
        ab -n 1000 -c 10 http://localhost:8080/ > pr-performance.txt
        kill $PR_PID

    - name: Compare performance
      run: |
        echo "## Performance Comparison" >> $GITHUB_STEP_SUMMARY
        echo "### Base Branch:" >> $GITHUB_STEP_SUMMARY
        grep "Requests per second" base-performance.txt >> $GITHUB_STEP_SUMMARY
        echo "### PR Branch:" >> $GITHUB_STEP_SUMMARY
        grep "Requests per second" pr-performance.txt >> $GITHUB_STEP_SUMMARY

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-comparison
        path: |
          base-performance.txt
          pr-performance.txt

  pr-summary:
    runs-on: ubuntu-latest
    needs: [validate-pr, quick-tests, code-quality-check, security-check, build-check]
    if: always() && github.event.pull_request.draft == false
    name: PR Summary
    
    steps:
    - name: Generate PR summary
      run: |
        echo "## 🔍 Pull Request Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Check Results:" >> $GITHUB_STEP_SUMMARY
        echo "- Validation: ${{ needs.validate-pr.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tests: ${{ needs.quick-tests.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Code Quality: ${{ needs.code-quality-check.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security-check.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Build: ${{ needs.build-check.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check if any critical checks failed
        FAILED_CHECKS=""
        if [[ "${{ needs.validate-pr.result }}" != "success" ]]; then
          FAILED_CHECKS="${FAILED_CHECKS}validation, "
        fi
        if [[ "${{ needs.quick-tests.result }}" != "success" ]]; then
          FAILED_CHECKS="${FAILED_CHECKS}tests, "
        fi
        if [[ "${{ needs.security-check.result }}" != "success" ]]; then
          FAILED_CHECKS="${FAILED_CHECKS}security, "
        fi
        if [[ "${{ needs.build-check.result }}" != "success" ]]; then
          FAILED_CHECKS="${FAILED_CHECKS}build, "
        fi
        
        if [[ -n "$FAILED_CHECKS" ]]; then
          echo "### ⚠️ Failed Checks:" >> $GITHUB_STEP_SUMMARY
          echo "${FAILED_CHECKS%%, }" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please fix the issues above before merging." >> $GITHUB_STEP_SUMMARY
        else
          echo "### ✅ All checks passed! PR is ready for review." >> $GITHUB_STEP_SUMMARY
        fi

    - name: Comment PR results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const results = {
            validation: '${{ needs.validate-pr.result }}',
            tests: '${{ needs.quick-tests.result }}',
            quality: '${{ needs.code-quality-check.result }}',
            security: '${{ needs.security-check.result }}',
            build: '${{ needs.build-check.result }}'
          };
          
          const getIcon = (result) => result === 'success' ? '✅' : result === 'failure' ? '❌' : '⏭️';
          
          const body = `## 🔍 Pull Request Check Results
          
          | Check | Status | Result |
          |-------|--------|---------|
          | Validation | ${getIcon(results.validation)} | ${results.validation} |
          | Tests | ${getIcon(results.tests)} | ${results.tests} |
          | Code Quality | ${getIcon(results.quality)} | ${results.quality} |
          | Security | ${getIcon(results.security)} | ${results.security} |
          | Build | ${getIcon(results.build)} | ${results.build} |
          
          ${Object.values(results).every(r => r === 'success') ? 
            '🎉 All checks passed! This PR is ready for review.' : 
            '⚠️ Some checks failed. Please review and fix the issues above.'}
          
          ---
          *This comment was automatically generated by the CI/CD pipeline.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });