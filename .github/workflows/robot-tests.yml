name: Robot Framework Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'robot/**'
      - 'src/**'
      - '.github/workflows/robot-tests.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'robot/**'
      - 'src/**'
  workflow_dispatch:

jobs:
  robot-api-tests:
    runs-on: ubuntu-latest
    name: API Tests with Robot Framework
    
    services:
      app:
        image: openjdk:17-jdk-slim
        options: --health-cmd "curl -f http://localhost:8080/ || exit 1" --health-interval 30s --health-timeout 10s --health-retries 3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Start application in background
      run: |
        java -jar target/*.jar &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV

    - name: Wait for application to start
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:8080/; do sleep 2; done'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Robot Framework and dependencies
      run: |
        pip install --upgrade pip
        pip install robotframework
        pip install robotframework-requests
        pip install robotframework-jsonlibrary

    - name: Run API tests
      run: |
        robot --outputdir results --include api robot/api/
      continue-on-error: true

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

    - name: Upload Robot Framework results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-api-results
        path: |
          results/
          robot/

    - name: Publish Robot Framework results
      uses: joonvena/robotframework-reporter-action@v2.1
      if: always()
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
        report_path: results

  robot-ui-tests:
    runs-on: ubuntu-latest
    name: UI Tests with Robot Framework
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Start application in background
      run: |
        java -jar target/*.jar &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV

    - name: Wait for application to start
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:8080/; do sleep 2; done'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Robot Framework and Selenium
      run: |
        pip install --upgrade pip
        pip install robotframework
        pip install robotframework-seleniumlibrary

    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Set up ChromeDriver
      uses: nanasess/setup-chromedriver@master

    - name: Run UI tests (Headless)
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        robot --outputdir results --include ui --variable BROWSER:headlesschrome robot/ui/
      continue-on-error: true

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

    - name: Upload Robot Framework UI results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-ui-results
        path: |
          results/
          robot/

  combine-robot-results:
    runs-on: ubuntu-latest
    needs: [robot-api-tests, robot-ui-tests]
    if: always()
    name: Combine Robot Results
    
    steps:
    - name: Download API results
      uses: actions/download-artifact@v4
      with:
        name: robot-api-results
        path: api-results/

    - name: Download UI results
      uses: actions/download-artifact@v4
      with:
        name: robot-ui-results
        path: ui-results/

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Robot Framework
      run: pip install robotframework

    - name: Combine results
      run: |
        mkdir -p combined-results
        rebot --outputdir combined-results --name "Complete Test Suite" api-results/results/output.xml ui-results/results/output.xml
      continue-on-error: true

    - name: Upload combined results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-combined-results
        path: combined-results/