name: Code Quality & Security

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Run tests with coverage
      run: |
        mvn clean verify \
          -Dspring.profiles.active=test \
          -Dmaven.test.failure.ignore=false

    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ ! -z "$SONAR_TOKEN" ]; then
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }} \
            -Dsonar.organization=${{ github.repository_owner }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        else
          echo "SONAR_TOKEN not found, skipping SonarCloud analysis"
        fi

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: |
          target/site/jacoco/
          target/surefire-reports/

  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Security Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check \
          -Dformat=XML,JSON,HTML \
          -DfailBuildOnCVSS=7

    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-results
        path: target/dependency-check-report.*

  static-analysis:
    runs-on: ubuntu-latest
    name: Static Code Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run SpotBugs
      run: |
        mvn clean compile spotbugs:spotbugs \
          -Dspotbugs.effort=Max \
          -Dspotbugs.threshold=Low

    - name: Run Checkstyle
      run: mvn checkstyle:check
      continue-on-error: true

    - name: Run PMD
      run: mvn pmd:check
      continue-on-error: true

    - name: Upload static analysis results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: static-analysis-results
        path: |
          target/spotbugsXml.xml
          target/checkstyle-result.xml
          target/pmd.xml

  secrets-scan:
    runs-on: ubuntu-latest
    name: Secrets Scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  license-check:
    runs-on: ubuntu-latest
    name: License Compliance Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Generate license report
      run: |
        mvn license:aggregate-third-party-report
        mvn license:check

    - name: Upload license report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: license-report
        path: |
          target/generated-sources/license/
          target/site/

  performance-test:
    runs-on: ubuntu-latest
    name: Performance Testing
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Start application
      run: |
        java -jar target/*.jar &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV

    - name: Wait for application to start
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:8080/; do sleep 2; done'

    - name: Install Apache Bench
      run: sudo apt-get update && sudo apt-get install -y apache2-utils

    - name: Run performance test
      run: |
        ab -n 1000 -c 10 -g performance.tsv http://localhost:8080/ > performance-results.txt

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: |
          performance-results.txt
          performance.tsv